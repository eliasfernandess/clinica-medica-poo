/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.imepac.agendamento.telas;

import br.edu.imepac.administrativo.daos.ConsultaDAO;
import br.edu.imepac.administrativo.daos.ConvenioDAO;
import br.edu.imepac.administrativo.daos.ProntuarioDAO;
import br.edu.imepac.administrativo.entidades.Consulta;
import br.edu.imepac.administrativo.entidades.Convenio;
import br.edu.imepac.administrativo.entidades.Prontuario;
import br.edu.imepac.administrativo.telas.TelaLobby;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author elias
 */
public class EditarConsultas extends javax.swing.JFrame {
private Long consultaId;


   public EditarConsultas() {
        initComponents();
        // Deixe a tela vazia ou com dados padrão para teste
    }

private Consulta consulta; // Variável para armazenar a consulta

public EditarConsultas(Consulta consulta) {
    initComponents();
    this.consulta = consulta;
    this.consultaId = consulta.getId(); // Garante que o ID é atribuído
    carregarConvenios();
    carregarProntuarios();
    carregarDados();
}



private void carregarConvenios() {
    try {
        ConvenioDAO dao = new ConvenioDAO();
        List<Convenio> convenios = dao.listarConvenios();

        // Limpa o JComboBox antes de adicionar novos itens
        CONVENIOSjComboBox1.removeAllItems();

        // Adiciona os convênios no JComboBox
        for (Convenio c : convenios) {
            CONVENIOSjComboBox1.addItem(c.getId() + " - " + c.getNomeConvenio());
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao carregar convênios: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

private void carregarProntuarios() {
    try {
        ProntuarioDAO dao = new ProntuarioDAO(); // Instância do DAO
        List<Prontuario> prontuarios = dao.readAll(); // Busca os prontuários do banco
        
        CONVENIOSjComboBox2.removeAllItems(); // Limpa a JComboBox
        for (Prontuario prontuario : prontuarios) {
            // Adiciona os prontuários com ID e Receituário formatado
            CONVENIOSjComboBox2.addItem(prontuario.getId() + " - " + prontuario.getReceituario());
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar prontuários: " + e.getMessage());
    }
}





private void carregarDados() {
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm");
        jFormattedTextField1.setText(consulta.getDataHorario().format(formatter));
        jTextField2.setText(consulta.getSintomas());
        jCheckBox1.setSelected(consulta.eRetorno());
        jCheckBox2.setSelected(consulta.estaAtiva());

        // Define o item selecionado nos JComboBox
        for (int i = 0; i < CONVENIOSjComboBox1.getItemCount(); i++) {
            if (CONVENIOSjComboBox1.getItemAt(i).startsWith(consulta.getConvenioId().toString())) {
                CONVENIOSjComboBox1.setSelectedIndex(i);
                break;
            }
        }

        for (int i = 0; i < CONVENIOSjComboBox2.getItemCount(); i++) {
            if (CONVENIOSjComboBox2.getItemAt(i).startsWith(consulta.getProntuarioId().toString())) {
                CONVENIOSjComboBox2.setSelectedIndex(i);
                break;
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar os dados: " + e.getMessage());
    }
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        BotãoVoltar = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField2 = new javax.swing.JTextField();
        CONVENIOSjComboBox1 = new javax.swing.JComboBox<>();
        CONVENIOSjComboBox2 = new javax.swing.JComboBox<>();
        ATTBotao = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(697, 461));
        setMinimumSize(new java.awt.Dimension(697, 461));
        getContentPane().setLayout(null);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("EDITAR CONSULTAS");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(50, 20, 240, 25);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(-360, 80, 1250, 10);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 102, 255));
        jLabel21.setText("Campo com as cores AZUL são obrigatórios.");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(50, 50, 280, 20);

        BotãoVoltar.setBackground(new java.awt.Color(255, 153, 153));
        BotãoVoltar.setText("Voltar");
        BotãoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVoltar);
        BotãoVoltar.setBounds(470, 30, 170, 30);

        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jFormattedTextField1);
        jFormattedTextField1.setBounds(50, 130, 360, 40);

        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox1.setText("É RETORNO?");
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(50, 260, 120, 24);

        jCheckBox2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCheckBox2.setText("CONSULTA ATIVA?");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(190, 260, 150, 20);
        getContentPane().add(jTextField2);
        jTextField2.setBounds(50, 200, 360, 40);

        CONVENIOSjComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(CONVENIOSjComboBox1);
        CONVENIOSjComboBox1.setBounds(250, 300, 160, 40);

        CONVENIOSjComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(CONVENIOSjComboBox2);
        CONVENIOSjComboBox2.setBounds(50, 300, 160, 40);

        ATTBotao.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ATTBotao.setText("ATUALIZAR");
        ATTBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ATTBotaoActionPerformed(evt);
            }
        });
        getContentPane().add(ATTBotao);
        ATTBotao.setBounds(470, 130, 160, 50);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setText("DATA E HORA");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 110, 88, 20);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 255));
        jLabel5.setText("SINTOMAS");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 180, 118, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotãoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVoltarActionPerformed
        // TODO add your handling code here:
        TelaLobby telaLobby = new TelaLobby(); // Instancia a próxima tela
        telaLobby.setVisible(true); // Exibe a nova tela
        this.dispose(); // Fecha a tela atual (TelaLogin)
    }//GEN-LAST:event_BotãoVoltarActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void ATTBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ATTBotaoActionPerformed
   try {
        if (consultaId == null) {
            throw new IllegalArgumentException("ID da consulta não pode ser nulo.");
        }

        // Extrai o ID do convênio
        String convenioSelecionado = CONVENIOSjComboBox1.getSelectedItem().toString();
        Long convenioId = Long.parseLong(convenioSelecionado.split(" - ")[0].trim());

        // Extrai o ID do prontuário
        String prontuarioSelecionado = CONVENIOSjComboBox2.getSelectedItem().toString();
        Long prontuarioId = Long.parseLong(prontuarioSelecionado.split(" - ")[0].trim());

        // Outros campos
        String sintomas = jTextField2.getText();
        boolean retorno = jCheckBox1.isSelected();
        boolean ativa = jCheckBox2.isSelected();

        // Atualiza os dados da consulta
        consulta.setId(consultaId);
        consulta.setDataHorario(LocalDateTime.parse(jFormattedTextField1.getText()));
        consulta.setSintomas(sintomas);
        consulta.seteRetorno(retorno);
        consulta.setEstaAtiva(ativa);
        consulta.setConvenioId(convenioId);
        consulta.setProntuarioId(prontuarioId);

        // Atualiza no banco de dados
        ConsultaDAO dao = new ConsultaDAO();
        dao.update(consulta);

        JOptionPane.showMessageDialog(this, "Consulta atualizada com sucesso!");
        this.dispose();
        new ListagemConsultas().setVisible(true);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao atualizar consulta: " + e.getMessage());
    }

    }//GEN-LAST:event_ATTBotaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(EditarConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(EditarConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(EditarConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(EditarConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

    // Criando a tela e passando um ID fixo para teste
    java.awt.EventQueue.invokeLater(() -> {
        Long idConsulta = 1L; // Defina o ID da consulta para teste
    });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ATTBotao;
    private javax.swing.JButton BotãoVoltar;
    private javax.swing.JComboBox<String> CONVENIOSjComboBox1;
    private javax.swing.JComboBox<String> CONVENIOSjComboBox2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
