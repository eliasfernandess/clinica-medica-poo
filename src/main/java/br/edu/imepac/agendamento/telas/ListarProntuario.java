/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.imepac.agendamento.telas;

import br.edu.imepac.administrativo.daos.ProntuarioDAO;
import br.edu.imepac.administrativo.entidades.Prontuario;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elias
 */
public class ListarProntuario extends javax.swing.JFrame {

    /**
     * Creates new form ListarProntuario
     */
    public ListarProntuario() {
    initComponents();
    carregarProntuarios(); // Carrega os dados ao abrir a tela
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TABELALISTAR = new javax.swing.JTable();
        EXCLUIRjButton1 = new javax.swing.JButton();
        CRIAROUTRAjButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(818, 522));
        setMinimumSize(new java.awt.Dimension(818, 522));
        getContentPane().setLayout(null);

        TABELALISTAR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "RECEITUARIO", "EXAMES", "OBSERVAÇÕES"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TABELALISTAR);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 36, 452, 402);

        EXCLUIRjButton1.setBackground(new java.awt.Color(255, 153, 153));
        EXCLUIRjButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        EXCLUIRjButton1.setText("EXCLUIR");
        EXCLUIRjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXCLUIRjButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(EXCLUIRjButton1);
        EXCLUIRjButton1.setBounds(550, 40, 220, 60);

        CRIAROUTRAjButton2.setBackground(new java.awt.Color(102, 255, 204));
        CRIAROUTRAjButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CRIAROUTRAjButton2.setText("CRIAR OUTRA");
        CRIAROUTRAjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CRIAROUTRAjButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(CRIAROUTRAjButton2);
        CRIAROUTRAjButton2.setBounds(550, 120, 220, 60);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void EXCLUIRjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXCLUIRjButton1ActionPerformed
       try {
        int selectedRow = TABELALISTAR.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um prontuário para excluir!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Long id = (Long) TABELALISTAR.getValueAt(selectedRow, 0);
        ProntuarioDAO dao = new ProntuarioDAO();
        dao.delete(id);

        JOptionPane.showMessageDialog(this, "Prontuário excluído com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        carregarProntuarios();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao excluir: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_EXCLUIRjButton1ActionPerformed

    private void CRIAROUTRAjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CRIAROUTRAjButton2ActionPerformed
          new CriarProntuario().setVisible(true);
    this.dispose();
    }//GEN-LAST:event_CRIAROUTRAjButton2ActionPerformed

    private void carregarProntuarios() {
    try {
        DefaultTableModel model = (DefaultTableModel) TABELALISTAR.getModel();
        model.setRowCount(0); // Limpa a tabela

        ProntuarioDAO dao = new ProntuarioDAO();
        List<Prontuario> prontuarios = dao.readAll();

        for (Prontuario p : prontuarios) {
            model.addRow(new Object[]{
                p.getReceituario(),
                p.getExames(),
                p.getObservacoes()
            });
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar dados: " + e.getMessage(),
                                      "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
    /* Configura o Look and Feel Nimbus */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(ListarProntuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(() -> {
        ListarProntuario tela = new ListarProntuario();
        tela.carregarProntuarios(); // Carrega os dados na tabela ao iniciar a tela
        tela.setVisible(true);
    });
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CRIAROUTRAjButton2;
    private javax.swing.JButton EXCLUIRjButton1;
    private javax.swing.JTable TABELALISTAR;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
