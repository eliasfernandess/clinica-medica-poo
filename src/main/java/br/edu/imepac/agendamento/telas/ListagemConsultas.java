/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.imepac.agendamento.telas;

import br.edu.imepac.administrativo.daos.ConsultaDAO;
import br.edu.imepac.administrativo.entidades.Consulta;
import br.edu.imepac.administrativo.telas.TelaLobby;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elias
 */
public class ListagemConsultas extends javax.swing.JFrame {
    private void carregarConsultas() {
    try {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpa a tabela

        ConsultaDAO dao = new ConsultaDAO();
        List<Consulta> consultas = dao.readAll();

        for (Consulta c : consultas) {
            model.addRow(new Object[]{
                c.getDataHorario(),
                c.getSintomas(),
                c.eRetorno(),
                c.estaAtiva(),
                c.getConvenioId(), // id_conv
                c.getProntuarioId() // prontuario_id
            });
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar consultas: " + e.getMessage());
    }
}


    /**
     * Creates new form ListagemConsultas
     */
   public ListagemConsultas() {
    initComponents();
    carregarConsultas();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        BotãoVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ExcluirBtt = new javax.swing.JButton();
        EditarBTT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(996, 577));
        setMinimumSize(new java.awt.Dimension(996, 577));
        setPreferredSize(new java.awt.Dimension(996, 577));
        getContentPane().setLayout(null);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("LISTAGEM CONSULTAS");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(70, 30, 240, 25);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(-360, 80, 1380, 10);

        BotãoVoltar.setBackground(new java.awt.Color(255, 153, 153));
        BotãoVoltar.setText("Voltar");
        BotãoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVoltar);
        BotãoVoltar.setBounds(800, 30, 170, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DATA E HORA", "SINTOMAS", "RETORNO", "CONSULTA ATIVA", "CONVENIO", "PRONTUARIO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 120, 700, 402);

        ExcluirBtt.setText("EXCLUIR");
        getContentPane().add(ExcluirBtt);
        ExcluirBtt.setBounds(800, 200, 150, 60);

        EditarBTT.setText("EDITAR");
        EditarBTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarBTTActionPerformed(evt);
            }
        });
        getContentPane().add(EditarBTT);
        EditarBTT.setBounds(800, 120, 150, 60);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BotãoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVoltarActionPerformed
        // TODO add your handling code here:
        TelaLobby telaLobby = new TelaLobby(); // Instancia a próxima tela
        telaLobby.setVisible(true); // Exibe a nova tela
        this.dispose(); // Fecha a tela atual (TelaLogin)
    }//GEN-LAST:event_BotãoVoltarActionPerformed

    private void EditarBTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarBTTActionPerformed
    int row = jTable1.getSelectedRow(); // Pega a linha selecionada
    
    if (row != -1) { // Verifica se uma linha foi selecionada
        try {
            // Captura os dados da linha selecionada
            String dataHorario = jTable1.getValueAt(row, 0).toString();
            String sintomas = jTable1.getValueAt(row, 1).toString();
            Boolean eRetorno = (Boolean) jTable1.getValueAt(row, 2);
            Boolean estaAtiva = (Boolean) jTable1.getValueAt(row, 3);
            String convenio = jTable1.getValueAt(row, 4).toString();
            String prontuario = jTable1.getValueAt(row, 5).toString();

            Long convenioId = Long.parseLong(convenio.split(" - ")[0]); // Captura apenas o ID
            Long prontuarioId = Long.parseLong(prontuario.split(" - ")[0]); 

            // Cria um objeto Consulta com os dados capturados
            Consulta consulta = new Consulta();
            consulta.setDataHorario(LocalDateTime.parse(dataHorario)); // Parse LocalDateTime
            consulta.setSintomas(sintomas);
            consulta.seteRetorno(eRetorno);
            consulta.setEstaAtiva(estaAtiva);
            consulta.setConvenioId(convenioId);
            consulta.setProntuarioId(prontuarioId);

            // Abre a tela de edição passando a consulta
            EditarConsultas editarTela = new EditarConsultas(consulta);
            editarTela.setVisible(true);
            dispose(); // Fecha a tela atual
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar dados para edição: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecione uma consulta para editar.");
    }


    }//GEN-LAST:event_EditarBTTActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemConsultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ListagemConsultas().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotãoVoltar;
    private javax.swing.JButton EditarBTT;
    private javax.swing.JButton ExcluirBtt;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
