/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.imepac.agendamento.telas;

import br.edu.imepac.administrativo.daos.ConsultaDAO;
import br.edu.imepac.administrativo.daos.ConvenioDAO;
import br.edu.imepac.administrativo.daos.ProntuarioDAO;
import br.edu.imepac.administrativo.entidades.Consulta;
import br.edu.imepac.administrativo.entidades.Convenio;
import br.edu.imepac.administrativo.entidades.Funcionario;
import br.edu.imepac.administrativo.entidades.Prontuario;
import br.edu.imepac.administrativo.telas.TelaLobby;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author elias
 */
public class ConsultasAgendar extends javax.swing.JFrame {

    /**
     * Creates new form ConsultasAgendar
     */
    public ConsultasAgendar() {
    initComponents();
    carregarConvenios();
    carregarProntuarios();
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        BotãoVoltar = new javax.swing.JButton();
        DataHorajFormattedTextField1 = new javax.swing.JFormattedTextField();
        SintomasField = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        CONVENIOSjComboBox1 = new javax.swing.JComboBox<>();
        CONVENIOSjComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(669, 446));
        setMinimumSize(new java.awt.Dimension(669, 446));
        setPreferredSize(new java.awt.Dimension(669, 446));
        getContentPane().setLayout(null);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("AGENDAR CONSULTAS");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(50, 20, 240, 25);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(-360, 80, 1250, 10);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 102, 255));
        jLabel21.setText("Campo com as cores AZUL são obrigatórios.");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(50, 50, 280, 20);

        BotãoVoltar.setBackground(new java.awt.Color(255, 153, 153));
        BotãoVoltar.setText("Voltar");
        BotãoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVoltar);
        BotãoVoltar.setBounds(470, 30, 170, 30);

        try {
            DataHorajFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/#### ##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        DataHorajFormattedTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(DataHorajFormattedTextField1);
        DataHorajFormattedTextField1.setBounds(50, 120, 160, 40);

        SintomasField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(SintomasField);
        SintomasField.setBounds(50, 190, 350, 80);

        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(51, 153, 255));
        jCheckBox1.setText("É RETORNO?");
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(50, 280, 130, 29);

        jCheckBox2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(51, 153, 255));
        jCheckBox2.setText("CONSULTA ATIVA?");
        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(190, 280, 174, 29);

        CONVENIOSjComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CONVENIOSjComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(CONVENIOSjComboBox1);
        CONVENIOSjComboBox1.setBounds(50, 350, 170, 40);

        CONVENIOSjComboBox2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CONVENIOSjComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(CONVENIOSjComboBox2);
        CONVENIOSjComboBox2.setBounds(230, 350, 170, 40);

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("SALVAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(430, 110, 210, 50);

        jButton2.setBackground(new java.awt.Color(255, 255, 153));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("LISTAGEM");
        getContentPane().add(jButton2);
        jButton2.setBounds(430, 180, 210, 50);

        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("PRONTUARIOS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(230, 330, 80, 16);

        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setText("DATA E HORA");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 100, 80, 16);

        jLabel3.setForeground(new java.awt.Color(51, 153, 255));
        jLabel3.setText("SINTOMAS");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 170, 80, 16);

        jLabel4.setForeground(new java.awt.Color(51, 153, 255));
        jLabel4.setText("CONVÊNIOS");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 330, 80, 16);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carregarConvenios() {
    try {
        ConvenioDAO dao = new ConvenioDAO();
        List<Convenio> convenios = dao.listarConvenios();

        // Limpa o JComboBox antes de adicionar novos itens
        CONVENIOSjComboBox1.removeAllItems();

        // Adiciona os convênios no JComboBox
        for (Convenio c : convenios) {
            CONVENIOSjComboBox1.addItem(c.getId() + " - " + c.getNomeConvenio());
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao carregar convênios: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}




private void carregarProntuarios() {
    try {
        ProntuarioDAO dao = new ProntuarioDAO();
        List<Prontuario> prontuarios = dao.readAll(); // Busca os prontuários do banco

        CONVENIOSjComboBox2.removeAllItems(); // Limpa a JComboBox
        for (Prontuario prontuario : prontuarios) {
            CONVENIOSjComboBox2.addItem(prontuario.getId() + " - " + prontuario.getReceituario());
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar prontuários: " + e.getMessage());
    }
}

    
    private void BotãoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVoltarActionPerformed
        // TODO add your handling code here:
        TelaLobby telaLobby = new TelaLobby(); // Instancia a próxima tela
        telaLobby.setVisible(true); // Exibe a nova tela
        this.dispose(); // Fecha a tela atual (TelaLogin)
    }//GEN-LAST:event_BotãoVoltarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       try {
        // Captura os dados da tela
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
        LocalDateTime dataHora = LocalDateTime.parse(DataHorajFormattedTextField1.getText(), formatter);
        String sintomas = SintomasField.getText();
        boolean retorno = jCheckBox1.isSelected();
        boolean ativa = jCheckBox2.isSelected();

        String convenioSelecionado = CONVENIOSjComboBox1.getSelectedItem().toString();
        Long convenioId = Long.parseLong(convenioSelecionado.split(" - ")[0].trim());

        String prontuarioSelecionado = CONVENIOSjComboBox2.getSelectedItem().toString();
        Long prontuarioId = Long.parseLong(prontuarioSelecionado.split(" - ")[0].trim());

        // Criar a entidade Consulta
        Consulta consulta = new Consulta();
        consulta.setDataHorario(dataHora);
        consulta.setSintomas(sintomas);
        consulta.seteRetorno(retorno);
        consulta.setEstaAtiva(ativa);
        consulta.setConvenioId(convenioId);
        consulta.setProntuarioId(prontuarioId);

        // Configurando atendenteId
        Funcionario atendente = new Funcionario();
        atendente.setId(1L); // Substitua pelo ID válido do atendente
        consulta.setAtendenteId(atendente);

        // Configurando medicoId
        Funcionario medico = new Funcionario();
        medico.setId(2L); // Substitua pelo ID válido do médico
        consulta.setMedicoId(medico);

        // Salvar no banco
        ConsultaDAO dao = new ConsultaDAO();
        dao.create(consulta);

        JOptionPane.showMessageDialog(this, "Consulta salva com sucesso!");
        this.dispose();
        new ListagemConsultas().setVisible(true);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao salvar consulta: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultasAgendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultasAgendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultasAgendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultasAgendar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultasAgendar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotãoVoltar;
    private javax.swing.JComboBox<String> CONVENIOSjComboBox1;
    private javax.swing.JComboBox<String> CONVENIOSjComboBox2;
    private javax.swing.JFormattedTextField DataHorajFormattedTextField1;
    private javax.swing.JTextField SintomasField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
