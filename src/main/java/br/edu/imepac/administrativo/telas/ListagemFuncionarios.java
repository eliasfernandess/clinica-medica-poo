/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.imepac.administrativo.telas;

import br.edu.imepac.administrativo.daos.FuncionarioDAO;
import br.edu.imepac.administrativo.entidades.Funcionario;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elias
 */
public class ListagemFuncionarios extends javax.swing.JFrame {

    /**
     * Creates new form ListagemFuncionarios
     */
    public ListagemFuncionarios() {
        initComponents();
        carregarFuncionarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VoltarListConv = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        EXCLUIRBTT = new javax.swing.JToggleButton();
        EDITARBTT = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1081, 593));
        setMinimumSize(new java.awt.Dimension(1081, 593));
        setPreferredSize(new java.awt.Dimension(1081, 593));
        getContentPane().setLayout(null);

        VoltarListConv.setBackground(new java.awt.Color(255, 153, 153));
        VoltarListConv.setText("Voltar");
        VoltarListConv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarListConvActionPerformed(evt);
            }
        });
        getContentPane().add(VoltarListConv);
        VoltarListConv.setBounds(950, 30, 90, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 80, 1210, 3);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("LISTAGEM FUNCIONARIOS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 30, 320, 32);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Funcionário", "Idade", "E-mail", "Tipo de Funcionário", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(50, 120, 750, 402);

        EXCLUIRBTT.setBackground(new java.awt.Color(255, 153, 153));
        EXCLUIRBTT.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        EXCLUIRBTT.setText("EXCLUIR");
        EXCLUIRBTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXCLUIRBTTActionPerformed(evt);
            }
        });
        getContentPane().add(EXCLUIRBTT);
        EXCLUIRBTT.setBounds(840, 230, 210, 60);

        EDITARBTT.setBackground(new java.awt.Color(255, 255, 153));
        EDITARBTT.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        EDITARBTT.setText("EDITAR");
        EDITARBTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITARBTTActionPerformed(evt);
            }
        });
        getContentPane().add(EDITARBTT);
        EDITARBTT.setBounds(840, 140, 210, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
private void carregarFuncionarios() {
    DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
    tableModel.setRowCount(0); // Limpa os dados existentes na tabela

    jTable1.getColumnModel().getColumn(0).setMinWidth(0);
    jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
    jTable1.getColumnModel().getColumn(0).setWidth(0);

    try {
        FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
        List<Funcionario> funcionarios = funcionarioDAO.readAll();

        for (Funcionario funcionario : funcionarios) {
            tableModel.addRow(new Object[]{
                funcionario.getId(),            // Coluna de ID
                funcionario.getNome(),          // Coluna de Nome
                funcionario.getIdade(),         // Coluna de Idade
                funcionario.getEmail(),         // Coluna de E-mail
                funcionario.getTipoFuncionario()// Coluna de Tipo de Funcionário
            });
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar funcionários: " + e.getMessage(),
                "Erro", JOptionPane.ERROR_MESSAGE);
    }
}



    
    private void VoltarListConvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarListConvActionPerformed
        // TODO add your handling code here:
        TelaLobby telaLobby = new TelaLobby(); // Instancia a próxima tela
        telaLobby.setVisible(true); // Exibe a nova tela
        this.dispose(); // Fecha a tela atual (TelaLogin)
    }//GEN-LAST:event_VoltarListConvActionPerformed

    private void EDITARBTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITARBTTActionPerformed
      int selectedRow = jTable1.getSelectedRow(); // Obter a linha selecionada
    if (selectedRow != -1) { // Verificar se uma linha foi selecionada
        try {
            // Obter o ID da linha selecionada
            Long id = Long.valueOf(jTable1.getValueAt(selectedRow, 0).toString()); // Coluna 0: ID
            
            // Buscar os dados completos do funcionário pelo ID
            FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
            Funcionario funcionario = funcionarioDAO.readById(id);
            
            if (funcionario != null) {
                // Abrir a tela de edição e passar o funcionário
                EditarFuncionarios editarFuncionarios = new EditarFuncionarios(funcionario);
                editarFuncionarios.setVisible(true);
                this.dispose(); // Fechar a tela atual
            } else {
                JOptionPane.showMessageDialog(this, "Funcionário não encontrado.", 
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao converter o ID: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao buscar funcionário: " + e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecione uma linha para editar.", 
                "Aviso", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_EDITARBTTActionPerformed

    private void EXCLUIRBTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXCLUIRBTTActionPerformed
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir este funcionário?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                String nome = jTable1.getValueAt(selectedRow, 0).toString();
                FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
                funcionarioDAO.deleteByName(nome);
                carregarFuncionarios();
                JOptionPane.showMessageDialog(this, "Funcionário excluído com sucesso!");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir funcionário: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecione um funcionário para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_EXCLUIRBTTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ListagemFuncionarios().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton EDITARBTT;
    private javax.swing.JToggleButton EXCLUIRBTT;
    private javax.swing.JButton VoltarListConv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
