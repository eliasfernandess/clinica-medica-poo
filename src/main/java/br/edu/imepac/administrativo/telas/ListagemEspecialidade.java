package br.edu.imepac.administrativo.telas;

import br.edu.imepac.administrativo.daos.EspecialidadeDAO;
import br.edu.imepac.administrativo.entidades.Especialidade;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elias
 */
public class ListagemEspecialidade extends javax.swing.JFrame {

    /**
     * Creates new form ListagemEspecialidade
     */
    public ListagemEspecialidade() {
        initComponents();
        carregarEspecialidades();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        BotãoVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ExcluitBtt = new javax.swing.JButton();
        EditarBtt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(497, 652));
        setMinimumSize(new java.awt.Dimension(497, 652));
        setPreferredSize(new java.awt.Dimension(497, 652));
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 73, 500, 10);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("LISTAGEM ESPECIALIDADES");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 330, 32);

        BotãoVoltar.setBackground(new java.awt.Color(255, 153, 153));
        BotãoVoltar.setText("Voltar");
        BotãoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVoltar);
        BotãoVoltar.setBounds(390, 20, 90, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Especialidade", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 120, 452, 402);

        ExcluitBtt.setBackground(new java.awt.Color(255, 102, 102));
        ExcluitBtt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ExcluitBtt.setText("EXCLUIR");
        ExcluitBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluitBttActionPerformed(evt);
            }
        });
        getContentPane().add(ExcluitBtt);
        ExcluitBtt.setBounds(210, 550, 170, 60);

        EditarBtt.setBackground(new java.awt.Color(255, 255, 153));
        EditarBtt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        EditarBtt.setText("EDITAR");
        EditarBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarBttActionPerformed(evt);
            }
        });
        getContentPane().add(EditarBtt);
        EditarBtt.setBounds(20, 550, 170, 60);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    
    private void carregarEspecialidades() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpa a tabela antes de adicionar os dados

        try {
            EspecialidadeDAO especialidadeDAO = new EspecialidadeDAO();
            List<Especialidade> especialidades = especialidadeDAO.readAll();

            for (Especialidade especialidade : especialidades) {
                model.addRow(new Object[]{
                    especialidade.getId(),
                    especialidade.getNome(),
                    especialidade.getDescricao()
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar especialidades: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }


    
    private void BotãoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVoltarActionPerformed
        // TODO add your handling code here:
        TelaLobby telaLobby = new TelaLobby(); // Instancia a próxima tela
        telaLobby.setVisible(true); // Exibe a nova tela
        this.dispose(); // Fecha a tela atual (TelaLogin)
    }//GEN-LAST:event_BotãoVoltarActionPerformed

    private void EditarBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarBttActionPerformed
      int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            try {
                Long id = Long.valueOf(jTable1.getValueAt(selectedRow, 0).toString());
                EspecialidadeDAO especialidadeDAO = new EspecialidadeDAO();
                Especialidade especialidade = especialidadeDAO.readById(id);

                if (especialidade != null) {
                    EditarEspecialidades editarEspecialidades = new EditarEspecialidades(especialidade);
                    editarEspecialidades.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "Especialidade não encontrada.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Erro ao buscar especialidade: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para editar.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_EditarBttActionPerformed

    private void ExcluitBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluitBttActionPerformed
      int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esta especialidade?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    Long id = Long.valueOf(jTable1.getValueAt(selectedRow, 0).toString());
                    EspecialidadeDAO especialidadeDAO = new EspecialidadeDAO();
                    especialidadeDAO.delete(id);

                    ((DefaultTableModel) jTable1.getModel()).removeRow(selectedRow);
                    JOptionPane.showMessageDialog(this, "Especialidade excluída com sucesso!");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir especialidade: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ExcluitBttActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemEspecialidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemEspecialidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemEspecialidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemEspecialidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListagemEspecialidade().setVisible(true);
                java.awt.EventQueue.invokeLater(() -> new ListagemEspecialidade().setVisible(true));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotãoVoltar;
    private javax.swing.JButton EditarBtt;
    private javax.swing.JButton ExcluitBtt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
