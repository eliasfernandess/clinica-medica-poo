/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.imepac.administrativo.telas;

import br.edu.imepac.administrativo.daos.PacienteDAO;
import br.edu.imepac.administrativo.entidades.Paciente;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author elias
 */

public class EditarPaciente extends javax.swing.JFrame {

    /**
     * Creates new form EditarPaciente
     * @param paciente
     */
    private Paciente pacienteAtual; // Variável para armazenar o paciente que está sendo editado

   public EditarPaciente(Paciente paciente) {
    initComponents();
    this.pacienteAtual = paciente; // Atribui o paciente atual
    preencherDados(paciente);

    // Preenche os campos da interface com os dados do paciente
    nomeCompletoTextfield.setText(paciente.getNome());
    identificacaoTextField.setText(paciente.getCpf());
    emailTextField.setText(paciente.getEmail());
    dataNascimentoTextField.setText(paciente.getDataNascimento().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
    idadeTextField.setText(String.valueOf(paciente.getIdade()));
    sexoTextField.setSelectedItem(paciente.getSexo() == 'M' ? "Masculino" : "Feminino");
    contatoTextField.setText(paciente.getContato());
    logradouroTextField.setText(paciente.getRua());
    numeroTextField.setText(paciente.getNumero());
    complementoTextField.setText(paciente.getComplemento());
    bairroTextField.setText(paciente.getBairro());
    cidadeTextField.setText(paciente.getCidade());
    estadoTextField1.setSelectedItem(paciente.getEstado());
}

  private void preencherDados(Paciente paciente) {
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    
    // Preenche campos
    nomeCompletoTextfield.setText(paciente.getNome());
    identificacaoTextField.setText(paciente.getCpf());
    emailTextField.setText(paciente.getEmail());
    idadeTextField.setText(String.valueOf(paciente.getIdade()));
    sexoTextField.setSelectedItem(paciente.getSexo() == 'M' ? "Masculino" : "Feminino");
    contatoTextField.setText(paciente.getContato());
    logradouroTextField.setText(paciente.getRua());
    numeroTextField.setText(paciente.getNumero());
    complementoTextField.setText(paciente.getComplemento());
    bairroTextField.setText(paciente.getBairro());
    cidadeTextField.setText(paciente.getCidade());
    estadoTextField1.setSelectedItem(paciente.getEstado());

    // Trata dataNascimento que pode ser null
    if (paciente.getDataNascimento() != null) {
        String dataFormatada = paciente.getDataNascimento().format(formatter);
        dataNascimentoTextField.setText(dataFormatada);
    } else {
        dataNascimentoTextField.setText(""); // Deixa vazio se a data for null
    }
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nomeCompletoTextfield = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        dataNascimentoTextField = new javax.swing.JFormattedTextField();
        idadeTextField = new javax.swing.JFormattedTextField();
        sexoTextField = new javax.swing.JComboBox<>();
        identificacaoTextField = new javax.swing.JFormattedTextField();
        contatoTextField = new javax.swing.JFormattedTextField();
        BotãoVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        complementoTextField = new javax.swing.JTextField();
        cidadeTextField = new javax.swing.JTextField();
        numeroTextField = new javax.swing.JTextField();
        bairroTextField = new javax.swing.JTextField();
        logradouroTextField = new javax.swing.JTextField();
        estadoTextField1 = new javax.swing.JComboBox<>();
        ListarBtt = new javax.swing.JButton();
        AtualizarBtt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1278, 808));
        setMinimumSize(new java.awt.Dimension(1278, 808));
        setPreferredSize(new java.awt.Dimension(1278, 808));
        getContentPane().setLayout(null);

        emailTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        emailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(emailTextField);
        emailTextField.setBounds(140, 280, 520, 50);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("NOME COMPLETO");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(140, 100, 118, 20);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setText("DOCUMENTO IDENTIFICAÇÃO");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(140, 180, 200, 20);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 255));
        jLabel5.setText("E-MAIL");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(140, 260, 50, 20);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 255));
        jLabel6.setText("DATA DE NASCIMENTO");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(700, 100, 150, 20);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 255));
        jLabel7.setText("IDADE");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(960, 100, 50, 20);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 255));
        jLabel8.setText("TELEFONE PARA CONTATO");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(700, 180, 180, 20);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 255));
        jLabel9.setText("SEXO");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(480, 180, 33, 20);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("EDITAR PACIENTES");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(140, 20, 240, 25);

        nomeCompletoTextfield.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nomeCompletoTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeCompletoTextfieldActionPerformed(evt);
            }
        });
        getContentPane().add(nomeCompletoTextfield);
        nomeCompletoTextfield.setBounds(140, 120, 520, 50);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(0, 80, 1250, 10);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 102, 255));
        jLabel21.setText("Campo com as cores AZUL são obrigatórios.");
        getContentPane().add(jLabel21);
        jLabel21.setBounds(140, 50, 280, 20);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(0, 360, 1250, 3);

        try {
            dataNascimentoTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        dataNascimentoTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dataNascimentoTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataNascimentoTextFieldFocusLost(evt);
            }
        });
        dataNascimentoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataNascimentoTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(dataNascimentoTextField);
        dataNascimentoTextField.setBounds(700, 120, 225, 52);

        idadeTextField.setEnabled(false);
        idadeTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idadeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idadeTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(idadeTextField);
        idadeTextField.setBounds(960, 120, 73, 52);

        sexoTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sexoTextField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino" }));
        sexoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexoTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(sexoTextField);
        sexoTextField.setBounds(480, 200, 178, 50);

        try {
            identificacaoTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        identificacaoTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        getContentPane().add(identificacaoTextField);
        identificacaoTextField.setBounds(140, 200, 240, 52);

        try {
            contatoTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)9####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        contatoTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        getContentPane().add(contatoTextField);
        contatoTextField.setBounds(700, 200, 320, 52);

        BotãoVoltar.setBackground(new java.awt.Color(255, 153, 153));
        BotãoVoltar.setText("Voltar");
        BotãoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotãoVoltarActionPerformed(evt);
            }
        });
        getContentPane().add(BotãoVoltar);
        BotãoVoltar.setBounds(1050, 20, 170, 30);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("ENDEREÇO RESIDENCIAL");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(140, 380, 220, 25);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Rua");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(140, 440, 40, 25);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Número");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(700, 440, 65, 25);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Complemento");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(140, 530, 114, 25);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Bairro");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(660, 530, 46, 25);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setText("Cidade");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(400, 530, 55, 25);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Estado");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(920, 530, 54, 25);

        complementoTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        complementoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complementoTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(complementoTextField);
        complementoTextField.setBounds(140, 560, 236, 50);

        cidadeTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cidadeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidadeTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(cidadeTextField);
        cidadeTextField.setBounds(400, 560, 236, 50);

        numeroTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numeroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(numeroTextField);
        numeroTextField.setBounds(700, 470, 90, 50);

        bairroTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bairroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bairroTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(bairroTextField);
        bairroTextField.setBounds(660, 560, 236, 50);

        logradouroTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        logradouroTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logradouroTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(logradouroTextField);
        logradouroTextField.setBounds(140, 470, 520, 50);

        estadoTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        estadoTextField1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Pará", "Paraíba", "Paraná", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondônia", "Roraima", "Santa Catarina", "São Paulo", "Sergipe", "Tocantins" }));
        getContentPane().add(estadoTextField1);
        estadoTextField1.setBounds(920, 560, 230, 50);

        ListarBtt.setBackground(new java.awt.Color(255, 255, 153));
        ListarBtt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListarBtt.setText("LISTAGEM");
        ListarBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarBttActionPerformed(evt);
            }
        });
        getContentPane().add(ListarBtt);
        ListarBtt.setBounds(430, 650, 270, 70);

        AtualizarBtt.setBackground(new java.awt.Color(102, 204, 255));
        AtualizarBtt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AtualizarBtt.setText("ATUALIZAR");
        AtualizarBtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarBttActionPerformed(evt);
            }
        });
        getContentPane().add(AtualizarBtt);
        AtualizarBtt.setBounds(140, 650, 270, 70);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void nomeCompletoTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeCompletoTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeCompletoTextfieldActionPerformed

    private void dataNascimentoTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataNascimentoTextFieldFocusLost
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        try {
            String inputData = dataNascimentoTextField.getText();
            LocalDate dataNascimento = LocalDate.parse(inputData, formatter);

            LocalDate currentDate = LocalDate.now();
            idadeTextField.setText(String.valueOf(Period.between(dataNascimento, currentDate).getYears()));
        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Data de nascimento inválida. Utilize o formato dd/MM/yyyy e valores reais.",
                "Erro", JOptionPane.ERROR_MESSAGE);
            dataNascimentoTextField.setText(""); // Limpa o campo
        }
    }//GEN-LAST:event_dataNascimentoTextFieldFocusLost

    private void dataNascimentoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataNascimentoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataNascimentoTextFieldActionPerformed

    private void idadeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idadeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idadeTextFieldActionPerformed

    private void sexoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexoTextFieldActionPerformed

    private void BotãoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotãoVoltarActionPerformed
        // TODO add your handling code here:
        TelaLobby telaLobby = new TelaLobby(); // Instancia a próxima tela
        telaLobby.setVisible(true); // Exibe a nova tela
        this.dispose(); // Fecha a tela atual (TelaLogin)
    }//GEN-LAST:event_BotãoVoltarActionPerformed

    private void complementoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_complementoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_complementoTextFieldActionPerformed

    private void cidadeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidadeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidadeTextFieldActionPerformed

    private void numeroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroTextFieldActionPerformed

    private void bairroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bairroTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bairroTextFieldActionPerformed

    private void logradouroTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logradouroTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logradouroTextFieldActionPerformed

    private void ListarBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarBttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ListarBttActionPerformed

    private boolean camposValidos() {
    if (nomeCompletoTextfield.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Nome Completo é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (identificacaoTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo CPF é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (emailTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo E-mail é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (dataNascimentoTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Data de Nascimento é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (contatoTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Contato é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (logradouroTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Rua é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (numeroTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Número é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (bairroTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Bairro é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (cidadeTextField.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Cidade é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (estadoTextField1.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "O campo Estado é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if (sexoTextField.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "O campo Sexo é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    // Validação de formato de Data de Nascimento
    try {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String inputData = dataNascimentoTextField.getText().trim();
        LocalDate.parse(inputData, formatter);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Data de Nascimento inválida. Use o formato dd/MM/yyyy.", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }

    return true; // Se todas as validações passarem
}

    
    private void AtualizarBttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarBttActionPerformed
 if (camposValidos()) {
        try {
            // Captura e validação dos campos
            String nome = nomeCompletoTextfield.getText().trim();
            String email = emailTextField.getText().trim();
            String inputData = dataNascimentoTextField.getText().trim();

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataNascimento = LocalDate.parse(inputData, formatter);

            int idade = Period.between(dataNascimento, LocalDate.now()).getYears();
            String cpf = identificacaoTextField.getText().trim();

            char sexo = sexoTextField.getSelectedItem().toString().charAt(0);
            String rua = logradouroTextField.getText().trim();
            String numero = numeroTextField.getText().trim();
            String complemento = complementoTextField.getText().trim();
            String bairro = bairroTextField.getText().trim();
            String cidade = cidadeTextField.getText().trim();
            String estado = estadoTextField1.getSelectedItem().toString();
            String contato = contatoTextField.getText().trim();

            // Atualiza os dados no objeto atual
            pacienteAtual.setNome(nome);
            pacienteAtual.setCpf(cpf);
            pacienteAtual.setEmail(email);
            pacienteAtual.setDataNascimento(dataNascimento);
            pacienteAtual.setIdade(idade);
            pacienteAtual.setSexo(sexo);
            pacienteAtual.setRua(rua);
            pacienteAtual.setNumero(numero);
            pacienteAtual.setComplemento(complemento);
            pacienteAtual.setBairro(bairro);
            pacienteAtual.setCidade(cidade);
            pacienteAtual.setEstado(estado);
            pacienteAtual.setContato(contato);

            // Atualiza no banco de dados
            PacienteDAO pacienteDAO = new PacienteDAO();
            pacienteDAO.update(pacienteAtual);

            // Mensagem de sucesso
            JOptionPane.showMessageDialog(this, "Paciente atualizado com sucesso!");

            // Fecha a tela e sinaliza para recarregar a listagem
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar o paciente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_AtualizarBttActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AtualizarBtt;
    private javax.swing.JButton BotãoVoltar;
    private javax.swing.JButton ListarBtt;
    private javax.swing.JTextField bairroTextField;
    private javax.swing.JTextField cidadeTextField;
    private javax.swing.JTextField complementoTextField;
    private javax.swing.JFormattedTextField contatoTextField;
    private javax.swing.JFormattedTextField dataNascimentoTextField;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JComboBox<String> estadoTextField1;
    private javax.swing.JFormattedTextField idadeTextField;
    private javax.swing.JFormattedTextField identificacaoTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField logradouroTextField;
    private javax.swing.JTextField nomeCompletoTextfield;
    private javax.swing.JTextField numeroTextField;
    private javax.swing.JComboBox<String> sexoTextField;
    // End of variables declaration//GEN-END:variables
}
